{"version":3,"sources":["webpack://@ianm/flarum-diff/webpack/bootstrap","webpack://@ianm/flarum-diff/external \"flarum.core.compat['app']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['Model']\"","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/Button']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['utils/extractText']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['helpers/username']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['helpers/humanTime']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['models/Post']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/Dropdown']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['helpers/avatar']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['helpers/icon']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['extend']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/CommentPost']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['utils/mixin']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['Component']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/Modal']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/Alert']\"","webpack://@ianm/flarum-diff/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@ianm/flarum-diff/./src/forum/models/Diff.js","webpack://@ianm/flarum-diff/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffButton.js","webpack://@ianm/flarum-diff/./src/forum/utils/touchDevice.js","webpack://@ianm/flarum-diff/./src/forum/utils/redrawPost.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffModal.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffList.js","webpack://@ianm/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@ianm/flarum-diff/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","Diff","mixin","Model","revision","attribute","createdAt","transformDate","deletedAt","rollbackedAt","actor","hasOne","deletedUser","rollbackedUser","inlineHtml","sideBySideHtml","combinedHtml","previewHtml","comparisonBetween","_extends","assign","target","arguments","length","source","apply","this","DiffButton","view","attrs","item","subButton","postDate","type","getButtonContent","buttonText","extractText","app","translator","trans","username","ago","humanTime","avatar","icon","className","title","Button","touchDevice","window","DocumentTouch","document","redrawPost","post","save","then","redraw","DiffModal","oninit","vnode","loading","showing","diffId","props","list","DiffList","forModal","selectedItem","id","moreResults","JSON","parse","href","route","user","config","oncreate","onupdate","$","hasClass","addClass","old","setDiffContent","session","preferences","diffRenderer","component","onclick","hide","canDeleteEditHistory","revisionCount","canRollbackEditHistory","buttonClassName","menuClassName","label","confirm","number","rollbackTo","request","url","forum","method","modal","close","cache","diffs","showAlert","content","data-original-title","tooltip","parent","trigger","data","tip","attr","transChoice","class","render","renderHtml","attributes","LoadingIndicator","onready","$revisions","$selectedItem","animate","scrollTop","offset","top","message","success","error","alerts","show","Alert","children","trust","contentType","diffContentHtml","$diffContainer","$previewContainer","$sideBySideButton","$inlineButton","$combinedButton","$previewButton","prop","siblings","setInfoContent","html","is","savePreferences","preview","$infoContainer","infoContentHtml","new","Modal","pages","map","items","forEach","diff","push","diffButton","toggleSubDiff","$listContainer","find","removeClass","placement","container","tooltipClass","$scrollParent","css","scrollHandler","viewportHeight","height","contentTop","contentHeight","scrollHeight","loadMore","on","context","onunload","off","load","redrawList","params","page","store","parseResults","results","payload","links","next","$subDiff","$icon","toggle","Component","DiffDropdown","initAttrs","getButton","vdom","getMenu","Dropdown","initializers","add","models","Post","canViewEditHistory","extend","CommentPost","isEdited","isHidden","replace","isEditing","DiscussionPage","$body","e","stopPropagation"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['Model'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['helpers/humanTime'];","module.exports = flarum.core.compat['models/Post'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['utils/mixin'];","module.exports = flarum.core.compat['Component'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/DiscussionPage'];","import Model from 'flarum/Model';\nimport mixin from 'flarum/utils/mixin';\n\nexport default class Diff extends mixin(Model, {\n  revision: Model.attribute('revision'),\n  createdAt: Model.attribute('createdAt', Model.transformDate),\n  deletedAt: Model.attribute('deletedAt', Model.transformDate),\n  rollbackedAt: Model.attribute('rollbackedAt', Model.transformDate),\n  actor: Model.hasOne('actor'),\n  deletedUser: Model.hasOne('deletedUser'),\n  rollbackedUser: Model.hasOne('rollbackedUser'),\n  inlineHtml: Model.attribute('inlineHtml'),\n  sideBySideHtml: Model.attribute('sideBySideHtml'),\n  combinedHtml: Model.attribute('combinedHtml'),\n  previewHtml: Model.attribute('previewHtml'),\n  comparisonBetween: Model.attribute('comparisonBetween'),\n}) {}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import Button from 'flarum/components/Button';\nimport avatar from 'flarum/helpers/avatar';\nimport icon from 'flarum/helpers/icon';\nimport username from 'flarum/helpers/username';\nimport humanTime from 'flarum/helpers/humanTime';\nimport extractText from 'flarum/utils/extractText';\n\n/**\n * The `DiffButton` component composes a button\n * for all revisions created in DiffList.\n */\nexport default class DiffButton extends Button {\n  // see the following link to find out why i'm overriding this at all\n  // https://discuss.flarum.org/d/22728-passing-an-object-to-a-custom-button-component\n  view() {\n    const attrs = Object.assign({}, this.attrs);\n\n    delete attrs.item;\n    delete attrs.subButton;\n    delete attrs.postDate;\n\n    attrs.type = 'button';\n\n    return <button {...attrs}>{this.getButtonContent()}</button>;\n  }\n\n  getButtonContent() {\n    const revision = this.attrs.item;\n    let actor = revision.actor();\n\n    let buttonText =\n      revision.revision() == 0\n        ? /* {username} created {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.createdInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(this.attrs.postDate),\n            })\n          )\n        : /* {username} edited {ago} */\n          extractText(\n            app.translator.trans('the-turk-diff.forum.editedInfo', {\n              username: username(revision.actor()),\n              ago: humanTime(revision.createdAt()),\n            })\n          );\n\n    if (revision.deletedAt()) {\n      if (this.attrs.subButton === false) {\n        /* {username} did something {ago} (deleted) */\n        buttonText = buttonText + ' ' + app.translator.trans('the-turk-diff.forum.deletedText');\n      } else {\n        /* sub button text that appears when you click on caret icon */\n        actor = revision.deletedUser();\n        /* {actor} deleted this content {ago} */\n        buttonText = extractText(\n          app.translator.trans('the-turk-diff.forum.deletedInfo', {\n            username: username(revision.deletedUser()),\n            ago: humanTime(revision.deletedAt()),\n          })\n        );\n      }\n    }\n\n    return [\n      // we also should consider deleted users here\n      actor.username() ? avatar(actor) : '',\n      // does this button have an icon?\n      revision.deletedAt() && this.attrs.subButton === false\n        ? icon('fas fa-caret-down', {\n            className: 'Button-caret',\n          })\n        : '',\n      // button label\n      <span className=\"Button-label\" title={buttonText}>\n        {revision.deletedAt() && this.attrs.subButton === true ? (\n          /* emphasize deleted revision's information */\n          <em>{buttonText}</em>\n        ) : (\n          buttonText\n        )}\n      </span>,\n    ];\n  }\n}\n","/**\n * Tooltips will be skipped for touch devices. Because they're forcing users\n * to double click the buttons. They also working unstable and won't fit to\n * screen sometimes. I'm planning to deal with them later on next versions.\n * https://stackoverflow.com/a/24647710/12866913\n */\nexport default function touchDevice() {\n  return true == ('ontouchstart' in window || (window.DocumentTouch && document instanceof DocumentTouch));\n}\n","/**\n * Redraw the post.\n * Workaround for - SubtreeRetainer doesn't allow redrawing post\n * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\n *\n * @param {Object} post\n */\nexport default function redrawPost(post) {\n  return post.save({}).then(() => m.redraw());\n}\n","import app from 'flarum/app';\nimport Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport username from 'flarum/helpers/username';\nimport humanTime from 'flarum/helpers/humanTime';\nimport avatar from 'flarum/helpers/avatar';\nimport extractText from 'flarum/utils/extractText';\nimport touchDevice from '../utils/touchDevice';\nimport redrawPost from '../utils/redrawPost';\nimport Alert from 'flarum/components/Alert';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport Dropdown from 'flarum/components/Dropdown';\nimport DiffList from './DiffList';\n\n/**\n * The `DiffModal` component is the main component of this extension.\n * It also contains DiffList components.\n */\nexport default class DiffModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * Whether or not the modal is loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * Whether the modal is showing or not.\n     *\n     * @type {Boolean}\n     */\n    this.showing = false;\n\n    /**\n     * We will use this to change modal's content when\n     * user clicks on a revision on the list.\n     *\n     * @type {Number|Null}\n     */\n    this.diffId = null;\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.props.post;\n\n    /**\n     * This is the current revision object.\n     *\n     * @type {Diff[]}\n     */\n    this.revision = this.props.item;\n\n    /**\n     * Create a new revision list.\n     * This approach may not work with newer Mithril versions.\n     *\n     * @type {DiffList}\n     */\n    this.list = new DiffList({\n      post: this.post,\n      forModal: true,\n      selectedItem: this.revision.id(),\n      moreResults: this.props.moreResults,\n    });\n\n    /**\n     * This holds information about which revisions are subjects for comparison.\n     *\n     * @type {Object}\n     */\n    this.comparisonBetween = JSON.parse(this.revision.comparisonBetween());\n  }\n\n  className() {\n    return 'DiffModal';\n  }\n\n  title() {\n    return [\n      // we also should consider deleted users here\n      this.revision.actor().username() ? avatar(this.revision.actor()) : '',\n      this.revision.revision() != 0\n        ? // x edited y ago\n          app.translator.trans('the-turk-diff.forum.editedInfo', {\n            username: (\n              <a href={app.route.user(this.revision.actor())} config={m.route}>\n                {username(this.revision.actor())}\n              </a>\n            ),\n            ago: humanTime(this.revision.createdAt()),\n          })\n        : // x created y ago\n          app.translator.trans('the-turk-diff.forum.createdInfo', {\n            username: (\n              <a href={app.route.user(this.revision.actor())} config={m.route}>\n                {username(this.revision.actor())}\n              </a>\n            ),\n            ago: humanTime(this.post.createdAt()),\n          }),\n    ];\n  }\n\n  oncreate(vnode) {\n    super.oncreate(vnode);\n\n    this.config(vnode);\n  }\n\n  onupdate(vnode) {\n    this.config(vnode);\n  }\n\n  config(vnode) {\n    // workaround for missing 'in' class on .ModalManager\n    // after redrawing the DiffList component.\n    // because i'm done with this shit.\n    // https://github.com/flarum/core/pull/2080\n    if (this.showing && !$('.ModalManager').hasClass('in')) $('.ModalManager').addClass('in');\n\n    // we should re-Initialize this component after user\n    // clicks a different revision while modal is open\n    if (this.diffId == this.revision.id()) return;\n\n    this.showing = true;\n    this.diffId = this.revision.id();\n\n    if (this.revision.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision) {\n      // we'll use Side By Side renderer as a fallback\n      // if there is no renderer choice\n      return this.setDiffContent(app.session.user.preferences().diffRenderer ? app.session.user.preferences().diffRenderer : 'sideBySide');\n    } else {\n      return this.setDiffContent('preview');\n    }\n  }\n\n  view() {\n    return (\n      <div className={'Modal modal-dialog ' + this.className()}>\n        <div className=\"Modal-content\">\n          <div className=\"Modal-close App-backControl\">\n            {Button.component({\n              icon: 'fas fa-times',\n              onclick: this.hide.bind(this),\n              className: 'Button Button--icon Button--link',\n            })}\n          </div>\n          {\n            // Revision Options Button\n          }\n          {(this.post.canDeleteEditHistory() && this.revision.revision() != this.post.revisionCount()) ||\n          (this.post.canRollbackEditHistory() && this.$('.DeletedDiff').length != this.post.revisionCount()) ? (\n            <Dropdown\n              className=\"diffCotrollerDropdown App-primaryControl\"\n              icon=\"fas fa-ellipsis-v\"\n              buttonClassName=\"Button\"\n              menuClassName=\"Dropdown-menu--right\"\n              label={app.translator.trans('the-turk-diff.forum.optionsButton')}\n            >\n              {\n                // Rollback\n                // there must be a revision to rollback,\n                // as we can't rollback to current post.\n              }\n              {this.post.canRollbackEditHistory() && this.comparisonBetween.old.diffId\n                ? Button.component({\n                    icon: 'fas fa-reply',\n                    onclick: () => {\n                      if (\n                        confirm(\n                          app.translator.trans('the-turk-diff.forum.confirmRollback', {\n                            number: this.revision.revision(),\n                          })\n                        )\n                      ) {\n                        this.loading = true;\n                        m.redraw();\n\n                        let rollbackTo =\n                          this.revision.revision() == this.post.revisionCount() ? this.comparisonBetween.old.diffId : this.revision.id();\n\n                        app\n                          .request({\n                            url: `${app.forum.attribute('apiUrl')}/diff/${rollbackTo}`,\n                            method: 'POST',\n                          })\n                          .then(() => {\n                            redrawPost(this.post);\n                            app.modal.close();\n\n                            if (app.cache.diffs && app.cache.diffs[this.post.id()]) {\n                              delete app.cache.diffs[this.post.id()];\n                            }\n\n                            this.showAlert('success', 'rollback');\n                          })\n                          .catch(() => {\n                            this.loading = false;\n                            m.redraw();\n                            redrawPost(this.post);\n\n                            this.showAlert('error', 'rollback');\n                          });\n                      }\n                    },\n                  }, this.revision.revision() == 0\n                  ? /* we're viewing the original content */\n                    app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                  : this.revision.revision() == this.post.revisionCount()\n                  ? this.comparisonBetween.old.revision != 0\n                    ? /* we're comparing this revision with current content. */\n                      app.translator.trans('the-turk-diff.forum.revertChangesButton')\n                    : /* we're comparing this revision with original content */\n                      app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\n                  : /* we're comparing this revision with another revision */\n                    app.translator.trans('the-turk-diff.forum.rollbackButton', {\n                      number: this.revision.revision(),\n                    }))\n                : ''}\n\n              {\n                // Delete\n                // you can't delete last item on the list\n                // because it's the current post actually.\n              }\n              {this.post.canDeleteEditHistory() && this.revision.revision() != this.post.revisionCount()\n                ? Button.component({\n                    icon: 'far fa-trash-alt',\n                    onclick: () => {\n                      if (confirm(app.translator.trans('the-turk-diff.forum.confirmDelete'))) {\n                        this.loading = true;\n                        m.redraw();\n\n                        this.revision\n                          .delete()\n                          .then(() => {\n                            app.modal.close();\n\n                            if (app.cache.diffs && app.cache.diffs[this.post.id()]) {\n                              delete app.cache.diffs[this.post.id()];\n                            }\n\n                            this.showAlert('success', 'delete');\n                          })\n                          .catch(() => {\n                            this.loading = false;\n                            m.redraw();\n\n                            this.showAlert('error', 'delete');\n                          });\n                      }\n                    },\n                  }, app.translator.trans('the-turk-diff.forum.deleteButton'))\n                : ''}\n            </Dropdown>\n          ) : (\n            ''\n          )}\n\n          <div className=\"Modal-header\">\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.title()}</h3>\n          </div>\n          {this.content()}\n        </div>\n      </div>\n    );\n  }\n\n  content() {\n    // we can use this class to customize all tooltips\n    // provided by this extension\n    const tooltipClass = 'diffTooltip';\n\n    return [\n      <div className=\"diff-grid\">\n        {/* Renderer Switcher Container */}\n        <div className=\"diff-grid-item diff-grid-controls\">\n          <div className=\"diffSwitcher\">\n            {this.revision.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n              ? [\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.inline')}>\n                    {Button.component({\n                      icon: 'fas fa-grip-lines',\n                      onclick: () => {\n                        // fix for Chrome\n                        // tooltips are not disappearing onclick\n                        this.$('.' + tooltipClass).tooltip('hide');\n\n                        this.setDiffContent('inline');\n                      },\n                      className: 'Button Button--icon Button--link inlineView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.sideBySide')}>\n                    {Button.component({\n                      icon: 'fas fa-columns',\n                      onclick: () => {\n                        this.$('.' + tooltipClass).tooltip('hide');\n                        this.setDiffContent('sideBySide');\n                      },\n                      className: 'Button Button--icon Button--link sideBySideView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                  <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.combined')}>\n                    {Button.component({\n                      icon: 'far fa-square',\n                      onclick: () => {\n                        this.$('.' + tooltipClass).tooltip('hide');\n                        this.setDiffContent('combined');\n                      },\n                      className: 'Button Button--icon Button--link combinedView',\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode)\n                              .parent()\n                              .tooltip({\n                                trigger: 'hover',\n                              })\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(tooltipClass)\n                          : '',\n                    })}\n                  </div>,\n                ]\n              : ''}\n            <div className=\"tooltip-wrapper\" data-original-title={app.translator.trans('the-turk-diff.forum.tooltips.preview')}>\n              {Button.component({\n                icon: 'far fa-eye',\n                onclick: () => {\n                  this.$('.' + tooltipClass).tooltip('hide');\n                  this.setDiffContent('preview');\n                },\n                className: 'Button Button--icon Button--link diffPreview',\n                oncreate: (vnode) =>\n                  touchDevice() === false\n                    ? $(vnode)\n                        .parent()\n                        .tooltip({\n                          trigger: 'hover',\n                        })\n                        .attr('data-original-title', app.translator.trans('the-turk-diff.forum.tooltips.preview'))\n                        .data('bs.tooltip')\n                        .tip()\n                        .addClass(tooltipClass)\n                    : '',\n              })}\n            </div>\n          </div>\n        </div>\n\n        {/* Comparison Info Container */}\n        <div className=\"diff-grid-item diff-grid-info\">\n          <div className=\"revisionInfo\">\n            <h4>\n              {app.translator.transChoice('the-turk-diff.forum.revisions', this.post.revisionCount(), {\n                revisionCount: this.post.revisionCount(),\n              })}\n            </h4>\n            <p class=\"diffInfoContainer\" />\n          </div>\n        </div>\n\n        {/* Revision List Container */}\n        <div className=\"diff-grid-item diff-grid-revisions\">{this.list.render()}</div>\n\n        {/* Diffs Container */}\n        <div className=\"diff-grid-item diff-grid-diff\">\n          <div className=\"diffContents\">\n            {\n              // .previewContainer is hidden by default\n              // we'll do some nasty switches later\n            }\n            <div\n              className={\n                'previewContainer Post-body' + (app.forum.attribute('textFormattingForDiffPreviews') === false ? ' diff-skip-formatting' : '')\n              }\n            >\n              {this.renderHtml(this.revision.data.attributes.previewHtml)}\n            </div>\n            <div className=\"diffContainer\" />\n          </div>\n        </div>\n        {LoadingIndicator.component({\n          className: 'DiffModal-loading' + (this.loading ? ' active' : ''),\n        })}\n      </div>,\n    ];\n  }\n\n  /**\n   * Slowly scroll to selected revision.\n   */\n  onready() {\n    const $revisions = this.$('.DiffList-content');\n    let $selectedItem = this.$('li#parentDiff' + this.revision.id());\n\n    $revisions.animate({\n      scrollTop: $selectedItem.offset().top - $revisions.offset().top + $revisions.scrollTop(),\n    });\n  }\n\n  /**\n   * Show success and error messages for rollback and delete operations.\n   *\n   * @param {string} type\n   * @param {string} key\n   */\n  showAlert(type, key) {\n    const message = {\n      success: 'the-turk-diff.forum.' + key + 'SuccessMessage',\n      error: 'the-turk-diff.forum.' + key + 'ErrorMessage',\n    }[type];\n\n    app.alerts.show(\n      new Alert({\n        type,\n        children: app.translator.trans(message),\n      })\n    );\n  }\n\n  /**\n   * Render the diff views provided by external lib.\n   *\n   * do we need to worry about m.trust() function?\n   * well, Flarum itself doing the same way for rendering\n   * post items as seen on CommentPost.js#L52\n   * also, the diff library itself treat all inputs as plain text:\n   * https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\n   * so no need to use additional Sanitizer lib for this operation.\n   *\n   * @param {string} content\n   */\n  renderHtml(content) {\n    return m.trust(content);\n  }\n\n  /**\n   * Insert rendered diff views into their container\n   * and disable active views' buttons.\n   * Disabling buttons is just for indicating\n   * so frontend looks good but the backend sucks.\n   *\n   * @param {string} contentType\n   */\n  setDiffContent(contentType) {\n    let diffContentHtml;\n    const $diffContainer = this.$('.diffContainer');\n    const $previewContainer = this.$('.previewContainer');\n    const $tooltip = this.$('.diffTooltip');\n\n    // buttons\n    const $sideBySideButton = this.$('.Button.sideBySideView');\n    const $inlineButton = this.$('.Button.inlineView');\n    const $combinedButton = this.$('.Button.combinedView');\n    const $previewButton = this.$('.Button.diffPreview');\n\n    if (contentType !== 'preview') {\n      if (contentType === 'sideBySide') {\n        diffContentHtml = this.renderHtml(this.revision.data.attributes.sideBySideHtml);\n        $sideBySideButton.prop('disabled', true);\n        // what a dynasty - LOL\n        $sideBySideButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'inline') {\n        diffContentHtml = this.renderHtml(this.revision.data.attributes.inlineHtml);\n        $inlineButton.prop('disabled', true);\n        $inlineButton.parent().siblings().children().prop('disabled', false);\n      } else if (contentType === 'combined') {\n        diffContentHtml = this.renderHtml(this.revision.data.attributes.combinedHtml);\n        $combinedButton.prop('disabled', true);\n        $combinedButton.parent().siblings().children().prop('disabled', false);\n      }\n    } else {\n      $diffContainer.hide();\n      this.$('.previewContainer').show();\n\n      $previewButton.prop('disabled', true);\n      $previewButton.parent().siblings().children().prop('disabled', false);\n      return this.setInfoContent(true);\n    }\n\n    if (diffContentHtml) {\n      $diffContainer.html(diffContentHtml);\n\n      if ($previewContainer.is(':visible')) {\n        $diffContainer.show();\n        $previewContainer.hide();\n      }\n\n      // let's remember their renderer choice\n      app.session.user.savePreferences({\n        diffRenderer: contentType,\n      });\n\n      return this.setInfoContent();\n    }\n\n    return;\n  }\n\n  /**\n   * Set informations about comparisons.\n   *\n   * @param {Boolean} preview\n   */\n  setInfoContent(preview = false) {\n    const $infoContainer = this.$('.diffInfoContainer');\n\n    let infoContentHtml =\n      !preview && this.revision.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\n        ? extractText(\n            app.translator.trans('the-turk-diff.forum.differences.sentence', {\n              old:\n                this.comparisonBetween.old.revision == -1\n                  ? /* we're viewing differences between current content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : this.comparisonBetween.old.revision == 0\n                  ? /* we're viewing differences between original content and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : /* we're viewing differences between revision X and {new} */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.old.revision,\n                    }),\n              new:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're viewing differences between {old} and original content */\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\n                  : this.comparisonBetween.new.revision == this.post.revisionCount()\n                  ? /* we're viewing differences between {old} and current content */\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\n                  : /* we're viewing differences between {old} and revision X */\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          )\n        : extractText(\n            app.translator.trans('the-turk-diff.forum.previewMode.sentence', {\n              content:\n                this.comparisonBetween.new.revision == 0\n                  ? /* we're previewing original content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.originalContent')\n                  : this.comparisonBetween.new.revision == this.post.revisionCount()\n                  ? /* we're previewing current content */\n                    app.translator.trans('the-turk-diff.forum.previewMode.currentContent')\n                  : /* we're previewing revision X */\n                    app.translator.trans('the-turk-diff.forum.previewMode.revisionWithNumber', {\n                      number: this.comparisonBetween.new.revision,\n                    }),\n            })\n          );\n\n    return $infoContainer.html(infoContentHtml);\n  }\n}\n","import app from 'flarum/app';\nimport Component from 'flarum/Component';\nimport DiffButton from './DiffButton';\nimport DiffModal from './DiffModal';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport extractText from 'flarum/utils/extractText';\nimport touchDevice from '../utils/touchDevice';\nimport redrawPost from '../utils/redrawPost';\n\n/**\n * The `DiffList` component displays a list of the post's revisions.\n * It's been using on both DiffDropdown & DiffModal components.\n * It also contains DiffButton components.\n */\nexport default class DiffList extends Component {\n  oninit(vnode) {\n    super.oninit(vnode);\n    /**\n     * Whether or not the revisions are loading.\n     *\n     * @type {Boolean}\n     */\n    this.loading = false;\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.attrs.post;\n\n    /**\n     * Whether or not there are more results that can be loaded.\n     *\n     * @type {Boolean|Null}\n     */\n    if (null !== this.attrs.moreResults) {\n      this.moreResults = this.attrs.moreResults;\n    } else {\n      this.moreResults = false;\n    }\n\n    /**\n     * Whether if this list for the DiffModal Component or not.\n     * Because the DiffList also can be used for DiffDropdown.\n     *\n     * @type {Boolean}\n     */\n    this.forModal = this.attrs.forModal;\n\n    /**\n     * Whether there is a pre-selected revision or not.\n     * If user clicks a revision in this list while DiffModal open,\n     * we'll use this value to active & disable selected revision's\n     * DiffButton component.\n     *\n     * @type {Number|Null}\n     */\n    this.selectedItem = this.attrs.selectedItem;\n\n    if (!app.cache.diffs) {\n      /**\n       * Initialize the cache if it isn't already initialized.\n       *\n       * @type {Array}\n       */\n      app.cache.diffs = [];\n    }\n  }\n\n  view() {\n    const pages = app.cache.diffs[this.post.id()] || [];\n\n    return (\n      <div className=\"DiffList-container\">\n        <div className=\"DiffList-content\">\n          <ul>\n            {pages.length\n              ? pages.map((diffs) => {\n                  const items = [];\n\n                  // This allows us to use .map function\n                  diffs.forEach((diff) => {\n                    items.push(diff);\n                  });\n\n                  return items.map((item) => {\n                    // we can use this class to customize all tooltips\n                    // provided by this extension\n                    const tooltipClass = 'diffTooltip';\n\n                    let diffButton = DiffButton.component({\n                      postDate: this.post.createdAt(),\n                      subButton: false,\n                      item,\n                      onclick: () => {\n                        if (!item.deletedAt()) {\n                          app.modal.show(\n                            new DiffModal({\n                              item,\n                              post: this.post,\n                              moreResults: this.moreResults,\n                            })\n                          );\n\n                          // fix for Chrome\n                          // tooltips are not disappearing onclick\n                          $('.' + tooltipClass).tooltip('hide');\n\n                          if (this.forModal) {\n                            // .DiffList-content container of clicked revision\n                            const $listContainer = this.$('li#parentDiff' + item.id());\n\n                            // disable clicked revision, enable others\n                            $listContainer.find('button').prop('disabled', true);\n                            $listContainer.siblings().find('button').prop('disabled', false);\n                            // add 'active' class to clicked revision, remove it from others\n                            $listContainer.siblings().removeClass('active');\n                            $listContainer.addClass('active');\n                          }\n                        } else {\n                          // if revision is deleted, we'll toggle the info\n                          // like GitHub does.\n                          this.toggleSubDiff(item.id());\n                        }\n                      },\n                      oncreate: (vnode) =>\n                        touchDevice() === false\n                          ? $(vnode)\n                              .tooltip({\n                                trigger: 'hover',\n                                placement: 'left',\n                                container: 'body',\n                              })\n                              .attr(\n                                'data-original-title',\n                                extractText(\n                                  item.revision() == this.post.revisionCount()\n                                    ? // we're hovering on latest revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.mostRecent')\n                                    : item.revision() == 0\n                                    ? // we're hovering on zeroth revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.originalContent')\n                                    : // we're hovering on other revision's button\n                                      app.translator.trans('the-turk-diff.forum.tooltips.revisionWithNumber', {\n                                        number: item.revision(),\n                                      })\n                                )\n                              )\n                              // this is a workaround for adding custom\n                              // classes into bootstrap tooltips\n                              // https://stackoverflow.com/a/29879041/12866913\n                              .data('bs.tooltip')\n                              .tip()\n                              .addClass(item.deletedAt() ? tooltipClass + ' deletedDiffTooltip' : tooltipClass)\n                          : '',\n                    });\n\n                    // returns the template for revision list items\n                    return [\n                      <li className={'Diff ParentDiff' + (item.deletedAt() ? ' DeletedDiff' : '')} id={'parentDiff' + item.id()}>\n                        {diffButton}\n                      </li>,\n                      item.deletedAt() ? (\n                        <li className=\"Diff SubDiff\" id={'subDiff' + item.id()}>\n                          {DiffButton.component({\n                            postDate: this.post.createdAt(),\n                            subButton: true,\n                            item,\n                          })}\n                        </li>\n                      ) : (\n                        ''\n                      ),\n                    ];\n                  });\n                })\n              : ''}\n            {this.loading ? (\n              LoadingIndicator.component({\n                className: 'LoadingIndicator--block',\n              })\n            ) : !pages.length ? (\n              <div className=\"DiffList-empty\">{app.translator.trans('the-turk-diff.forum.emptyText')}</div>\n            ) : (\n              ''\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n\n  oncreate(vnode) {\n    if (this.forModal && this.selectedItem) {\n      let $selectedItem = this.$('li#parentDiff' + this.selectedItem);\n      $selectedItem.find('button').prop('disabled', true);\n      $selectedItem.addClass('active');\n    }\n\n    const $revisions = this.$('.DiffList-content');\n    const $scrollParent = $revisions.css('overflow') === 'auto' ? $revisions : $(window);\n\n    // Lazy-loading implementation for the revision list\n    // simply checks if we're bottom of the list\n    // and if there are more results to show\n    const scrollHandler = () => {\n      const scrollTop = $scrollParent.scrollTop();\n      const viewportHeight = $scrollParent.height();\n      const contentTop = $scrollParent === $revisions ? 0 : $revisions.offset().top;\n      const contentHeight = $revisions[0].scrollHeight;\n\n      if (this.moreResults && !this.loading && scrollTop + viewportHeight >= contentTop + contentHeight) {\n        this.loadMore();\n      }\n    };\n\n    $scrollParent.on('scroll', scrollHandler);\n\n    context.onunload = () => {\n      $scrollParent.off('scroll', scrollHandler);\n    };\n  }\n\n  /**\n   * Load revisions.\n   *\n   * @public\n   */\n  load() {\n    // don't do anthing if we already cached revisions for the post.\n    // lazy-loading will perform loadMore() if there are moreResults\n    if (app.cache.diffs[this.post.id()]) return this.redrawList();\n\n    this.loadMore();\n  }\n\n  /**\n   * Load the next page of revision results.\n   *\n   * @public\n   */\n  loadMore() {\n    this.loading = true;\n    this.redrawList();\n\n    // don't do anthing if we already cached ALL revisions for the post.\n    if (app.cache.diffs[this.post.id()] && app.cache.diffs[this.post.id()].length == this.post.revisionCount()) {\n      return;\n    }\n\n    // set URL parameters\n    const params = app.cache.diffs[this.post.id()]\n      ? {\n          id: this.post.id(),\n          page: {\n            offset: app.cache.diffs[this.post.id()].length * 10,\n          },\n        }\n      : {\n          id: this.post.id(),\n        };\n\n    return app.store\n      .find('diff', params)\n      .then(this.parseResults.bind(this))\n      .catch(() => {})\n      .then(() => {\n        this.loading = false;\n        this.redrawList();\n      });\n  }\n\n  /**\n   * Parse results and append them to the revision list.\n   *\n   * @param {Diff[]} results\n   * @return {Diff[]}\n   */\n  parseResults(results) {\n    app.cache.diffs[this.post.id()] = app.cache.diffs[this.post.id()] || [];\n\n    if (results.length) app.cache.diffs[this.post.id()].push(results);\n\n    this.moreResults = !!results.payload.links.next;\n\n    return results;\n  }\n\n  /**\n   * Toggle the deleted revision's information (sub-button).\n   *\n   * @param {Number} id\n   */\n  toggleSubDiff(id) {\n    const $subDiff = this.$('li.Diff#subDiff' + id);\n    const $parentDiff = this.$('li.Diff#parentDiff' + id);\n    const $icon = $parentDiff.find('.icon');\n\n    $subDiff.toggle();\n\n    // switch caret icon onClick\n    if ($icon.hasClass('fa-caret-down')) {\n      $icon.removeClass('fa-caret-down').addClass('fa-caret-up');\n    } else {\n      $icon.removeClass('fa-caret-up').addClass('fa-caret-down');\n    }\n  }\n\n  /**\n   * Redraw the list based on parent component.\n   */\n  redrawList() {\n    m.redraw();\n\n    // because we don't need to redraw the post\n    // to update DiffList in DiffModal.\n    // We just need it for updating DiffDropdown.\n    if (this.forModal) return;\n\n    return redrawPost(this.post);\n  }\n}\n","import Dropdown from 'flarum/components/Dropdown';\nimport DiffList from './DiffList';\nimport icon from 'flarum/helpers/icon';\n\n/**\n * The `DiffDropdown` component is the entrance point for this extension.\n * It's the component that you see when you click on \"Edited\" button.\n * It also contains DiffList components.\n */\nexport default class DiffDropdown extends Dropdown {\n  static initAttrs(props) {\n    props.className = 'DiffDropdown';\n    props.buttonClassName = 'Button Button--link';\n    props.menuClassName = props.menuClassName;\n    props.label = app.translator.trans('the-turk-diff.forum.editedText');\n    props.icon = 'fas fa-history';\n\n    super.initAttrs(props);\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    /**\n     * The post that we're working with.\n     *\n     * @type {Post[]}\n     */\n    this.post = this.attrs.post;\n\n    /**\n     * Create a new revision list.\n     * This approach may not work with newer Mithril versions.\n     *\n     * @type {DiffList}\n     */\n    this.list = new DiffList({\n      post: this.post,\n      forModal: false,\n      selectedItem: null,\n      moreResults: null,\n    });\n  }\n\n  getButton() {\n    const vdom = super.getButton();\n\n    vdom.attrs.title = this.attrs.label;\n    vdom.attrs.onclick = this.onclick.bind(this);\n\n    return vdom;\n  }\n\n  getButtonContent() {\n    return [\n      icon(this.attrs.icon, {\n        className: 'Button-icon',\n      }),\n      <span className=\"Button-label\">{this.attrs.label}</span>,\n    ];\n  }\n\n  getMenu() {\n    return (\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName}>\n        <div className=\"DiffList-header\">\n          <h4>\n            {/* edited 1 time | edited x times */}\n            {app.translator.transChoice('the-turk-diff.forum.revisionInfo', this.attrs.post.revisionCount(), {\n              revisionCount: this.attrs.post.revisionCount(),\n            })}\n          </h4>\n        </div>\n        {this.showing ? this.list.render() : ''}\n      </div>\n    );\n  }\n\n  /**\n   * Load revision list.\n   */\n  onclick() {\n    this.list.load();\n  }\n}\n","import app from 'flarum/app';\nimport { extend } from 'flarum/extend';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Diff from './models/Diff';\nimport Post from 'flarum/models/Post';\nimport Model from 'flarum/Model';\nimport DiffDropdown from './components/DiffDropdown';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\n\napp.initializers.add('ianm-diff', () => {\n  app.store.models.diff = Diff;\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\n  Post.prototype.canRollbackEditHistory = Model.attribute('canRollbackEditHistory');\n  Post.prototype.canDeleteEditHistory = Model.attribute('canDeleteEditHistory');\n\n  extend(CommentPost.prototype, 'headerItems', function (items) {\n    const post = this.attrs.post;\n\n    // replace \"edited\" text to \"edited\" button\n    if (post.isEdited() && !post.isHidden() && post.canViewEditHistory() && post.revisionCount() > 0) {\n      items.replace('edited', DiffDropdown.component({ post }));\n    }\n\n    // remove diffs cache when post is editing\n    if (this.isEditing() && app.cache.diffs && app.cache.diffs[this.attrs.post.id()]) {\n      delete app.cache.diffs[this.props.post.id()];\n    }\n  });\n\n  // prevent dropdown from closing when user\n  // clicks on deleted diff\n  extend(DiscussionPage.prototype, 'oninit', function () {\n    const $body = $('body');\n\n    $body.on('click', 'li.ParentDiff.DeletedDiff', function (e) {\n      e.stopPropagation();\n    });\n\n    $body.on('click', 'li.SubDiff', function (e) {\n      e.stopPropagation();\n    });\n  });\n});\n"],"sourceRoot":""}